package com.keikakupet

import android.database.sqlite.SQLiteDatabase
import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import androidx.fragment.app.DialogFragment
import com.google.android.material.floatingactionbutton.FloatingActionButton
import com.google.android.material.snackbar.Snackbar
import kotlinx.android.synthetic.main.activity_to_do_list.*
import android.widget.ArrayAdapter
import android.widget.ListView
import kotlin.properties.Delegates

class ToDoListActivity : AppCompatActivity(), NewTaskDialogFragment.NewTaskDialogListener {
    private var tasks = arrayListOf<Task>()
    private var listItems = arrayListOf<String>()
    private var listAdapter: ArrayAdapter<String>? = null
    private var listView: ListView? = null

    override fun onDialogPositiveClick(dialog: DialogFragment, task:Task) {
        tasks.add(task)

        //add code from main activity to here
        var DBHelper: MyDBHandler by Delegates.notNull()
        var myDB: SQLiteDatabase by Delegates.notNull()
        //Version of database is always 1 so all info is being added to the same version ie same db?
        DBHelper = MyDBHandler(this, "TASKS_LIST",null ,1 )
        myDB = DBHelper.getWritableDatabase()
        //unresolved reference is now on addTask
        //myDB.addTask(task)
        DBHelper.addTask(task)

        listItems.add("${task.name}\n${task.deadline.getTime()}\n${task.priority}")
        listAdapter?.notifyDataSetChanged()
        populateListView()
        Snackbar.make(addTaskBtn, "Task Added Successfully", Snackbar.LENGTH_LONG).setAction("Action", null).show()
    }

    override fun onDialogNegativeClick(dialog: DialogFragment) {
    }

    fun showNewTaskUI() {
        val newFragment = NewTaskDialogFragment.newInstance(R.string.new_task_dialog_title)
        newFragment.show(supportFragmentManager, "newtask")
    }

    private fun populateListView() {
        listAdapter = ArrayAdapter(this, android.R.layout.simple_list_item_1, listItems)
        listView?.adapter = listAdapter
    }

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_to_do_list)

        val addTaskBtn = findViewById<FloatingActionButton>(R.id.addTaskBtn)
        addTaskBtn.setOnClickListener {
            showNewTaskUI()
        }

        listView = findViewById(R.id.toDoListView)
    }
}

//This is what was generated by the auto solve error option
//Should the database be built in the activity it's being used?
//private fun SQLiteDatabase.addTask(task: Task) {
//
//}
